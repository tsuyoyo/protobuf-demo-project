// Code generated by Wire protocol buffer compiler, do not edit.
// Source: tsuyoyo.protobuf.demo.Book in book.proto
package tsuyoyo.protobuf.demo

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

public class Book(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val id: Int = 0,
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val title: String = "",
  @field:WireField(
    tag = 3,
    adapter = "tsuyoyo.protobuf.demo.Author#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val author: Author? = null,
  @field:WireField(
    tag = 4,
    adapter = "tsuyoyo.protobuf.demo.Genre#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val genre: Genre = Genre.UNKNOWN,
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<Book, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is Book) return false
    if (unknownFields != other.unknownFields) return false
    if (id != other.id) return false
    if (title != other.title) return false
    if (author != other.author) return false
    if (genre != other.genre) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + id.hashCode()
      result = result * 37 + title.hashCode()
      result = result * 37 + (author?.hashCode() ?: 0)
      result = result * 37 + genre.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    result += """id=$id"""
    result += """title=${sanitize(title)}"""
    if (author != null) result += """author=$author"""
    result += """genre=$genre"""
    return result.joinToString(prefix = "Book{", separator = ", ", postfix = "}")
  }

  public fun copy(
    id: Int = this.id,
    title: String = this.title,
    author: Author? = this.author,
    genre: Genre = this.genre,
    unknownFields: ByteString = this.unknownFields,
  ): Book = Book(id, title, author, genre, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<Book> = object : ProtoAdapter<Book>(
      FieldEncoding.LENGTH_DELIMITED, 
      Book::class, 
      "type.googleapis.com/tsuyoyo.protobuf.demo.Book", 
      PROTO_3, 
      null, 
      "book.proto"
    ) {
      public override fun encodedSize(`value`: Book): Int {
        var size = value.unknownFields.size
        if (value.id != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(1, value.id)
        if (value.title != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2, value.title)
        if (value.author != null) size += Author.ADAPTER.encodedSizeWithTag(3, value.author)
        if (value.genre != Genre.UNKNOWN) size += Genre.ADAPTER.encodedSizeWithTag(4, value.genre)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: Book): Unit {
        if (value.id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.id)
        if (value.title != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.title)
        if (value.author != null) Author.ADAPTER.encodeWithTag(writer, 3, value.author)
        if (value.genre != Genre.UNKNOWN) Genre.ADAPTER.encodeWithTag(writer, 4, value.genre)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: Book): Unit {
        writer.writeBytes(value.unknownFields)
        if (value.genre != Genre.UNKNOWN) Genre.ADAPTER.encodeWithTag(writer, 4, value.genre)
        if (value.author != null) Author.ADAPTER.encodeWithTag(writer, 3, value.author)
        if (value.title != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.title)
        if (value.id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.id)
      }

      public override fun decode(reader: ProtoReader): Book {
        var id: Int = 0
        var title: String = ""
        var author: Author? = null
        var genre: Genre = Genre.UNKNOWN
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> id = ProtoAdapter.INT32.decode(reader)
            2 -> title = ProtoAdapter.STRING.decode(reader)
            3 -> author = Author.ADAPTER.decode(reader)
            4 -> try {
              genre = Genre.ADAPTER.decode(reader)
            } catch (e: ProtoAdapter.EnumConstantNotFoundException) {
              reader.addUnknownField(tag, FieldEncoding.VARINT, e.value.toLong())
            }
            else -> reader.readUnknownField(tag)
          }
        }
        return Book(
          id = id,
          title = title,
          author = author,
          genre = genre,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: Book): Book = value.copy(
        author = value.author?.let(Author.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<Book> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
